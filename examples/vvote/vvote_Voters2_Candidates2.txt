Agent Voter1:
LOCAL: [Voter1_vote1, Voter1_vote2, Voter1_end, Voter1_requested1, Voter1_requested2]
PERSISTENT: [Voter1_vote1, Voter1_vote2, Voter1_end, Voter1_requested1, Voter1_requested2]
INITIAL: []
init start
shared[2] coerce1[coerce]: start -> polling_station [Voter1_requested1:=1]
shared[2] coerce2[coerce]: start -> polling_station [Voter2_requested2:=1]
move_next: start -> polling_station
give_document: polling_station -> printing
print: printing -> has_ballot
scan_ballot: has_ballot -> scanning
enter_vote1: scanning -> voted [Voter1_vote1:=1]
enter_vote2: scanning -> voted [Voter1_vote2:=1]
check2: voted -> check2_ok
check2: voted -> check2_fail
skip: voted -> cast
raise_error: check2_fail -> error
check3: check2_fail -> check3
check3: check2_ok -> check3
raise_error: check3 -> error
move_next: check3 -> cast
move_next: check2_fail -> cast
move_next: check2_ok -> cast
send_to_wbb: cast -> send
shred: send -> shred
leave: send -> outside_ps
leave: shred -> outside_ps
shared[2] request[request]: outside_ps -> check_request
shared[2] share1[share]: check_request [Voter1_vote1==1] -> checkWBB
shared[2] share2[share]: check_request [Voter1_vote2==1] -> checkWBB
shared[2] not_share[not_share]: check_request -> checkWBB 
move_next: outside_ps -> checkWBB
checkWBB: checkWBB -> checkWBB_fail
checkWBB: checkWBB -> checkWBB_ok
raise_error: checkWBB_fail -> error
finish: checkWBB_fail -> end [Voter1_end:=1]
finish: checkWBB_ok -> end [Voter1_end:=1]
idle: end -> end

Agent Voter2:
LOCAL: [Voter2_vote1, Voter2_vote2, Voter2_end]
PERSISTENT: [Voter2_vote1, Voter2_vote2, Voter2_end]
INITIAL: []
init start
move_next: start -> polling_station
give_document: polling_station -> printing
print: printing -> has_ballot
scan_ballot: has_ballot -> scanning
enter_vote1: scanning -> voted [Voter2_vote1:=1]
enter_vote2: scanning -> voted [Voter2_vote2:=1]
check2: voted -> check2_ok
check2: voted -> check2_fail
skip: voted -> cast
raise_error: check2_fail -> error
check3: check2_fail -> check3
check3: check2_ok -> check3
raise_error: check3 -> error
move_next: check3 -> cast
move_next: check2_fail -> cast
move_next: check2_ok -> cast
send_to_wbb: cast -> send
shred: send -> shred
leave: send -> outside_ps
leave: shred -> outside_ps
move_next: outside_ps -> checkWBB
checkWBB: checkWBB -> checkWBB_fail
checkWBB: checkWBB -> checkWBB_ok
raise_error: checkWBB_fail -> error
finish: checkWBB_fail -> end [Voter2_end:=1]
finish: checkWBB_ok -> end [Voter2_end:=1]
idle: end -> end

Agent Coercer:
LOCAL: [Coercer_requested1, Coercer_requested2, Coercer_Voter1_vote1, Coercer_Voter1_vote2, Coercer_Voter1_novote]
PERSISTENT: [Coercer_requested1, Coercer_requested2, Coercer_Voter1_vote1, Coercer_Voter1_vote2, Coercer_Voter1_novote]
INITIAL: []
init start
shared[2] coerce1[coerce1]: start -> coerce [Coercer_requested1:=1]
shared[2] coerce2[coerce2]: start -> coerce [Coercer_requested2:=1] 
shared[2] request[request]: coerce -> request
move_next: request -> no_info
shared[2] share1[share]: no_info -> share3 [Coercer_Voter1_vote1:=1]
shared[2] share2[share]: no_info -> share3 [Coercer_Voter1_vote2:=1]
shared[2] not_share[share]: no_info -> nshare3 [Coercer_Voter1_novote:=-1]
check_wbb: share3 -> check3
check_wbb: nshare3 -> check3
punish: share3 -> punish
punish: check3 -> punish
punish: nshare3 -> punish
not_punish: share3 -> not_punish
not_punish: check3 -> not_punish
not_punish: nshare3 -> not_punish
idle: punish -> punish
idle: not_punish -> not_punish


FORMULA: <<Voter1>><>(Voter1_end==1)